-----------------------------------------------------------------
>> Elastohydrodynamic Lubrication Point Contact Solver for MATLAB
-----------------------------------------------------------------

Based on the theory presented in Venner and Lubrecht's book "Multilevel Methods in Lubrication", with the following modifications:
- Fourier Transforms are used to calculate deformation instead of the Multi-Level Multi-Integration mentioned in the book
- An option to execute the solver using the GPU is added

Examples are provided in the +examples folder. To run them, you must be in the project root folder (i.e. where this README is). From there, you can run examples from the examples namespace. E.g. from the command window in the root folder:
>> examples.ex1
>> examples.ex2
>> examples.ex3
>> examples.ex4
>> examples.ex5
>> examples.ex6
>> examples.ex7

Note on GPU support: Either download the package of mex files and place in the +utils folder, or build it using the script provided in the +utils folder. If you want to build it yourself, this is done by implementing a pentadiagonal solver using cusparse and mex. The mex file currently uses C++17, which needs a newer version of MATLAB than R2021b. So mexcuda can not be used and a local install of CUDA >= 11.2 must be provided. To build, a $MATLABROOT environment variable must be available, and for windows, the MSVC build environment must be initialised.

Variable naming conventions are kept similar to those used in "Multilevel Methods in Lubrication".

Things to do:
- Optimize the coarse-grid refinement function
- Optimize the line relaxation function on the GPU

References:
Venner, C.H., Lubrecht, A.A. (Eds.), 2000. Chapter 6 - ElastoHydrodynamic Lubrication, in: Multilevel Methods in Lubrication, Tribology Series. Elsevier, pp. 179â€“223. https://doi.org/10.1016/S0167-8922(00)80010-3
